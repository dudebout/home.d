#!/usr/bin/env zsh

inactivity_minutes=10
screensaver_fade_in_seconds=30
xset s $(( $inactivity_minutes * 60 )) $screensaver_fade_in_seconds
dpms_inactivity_minutes=$(( $inactivity_minutes + 1 ))
dpms_inactivity_seconds=$(( $dpms_inactivity_minutes * 60 ))
xset dpms $dpms_inactivity_seconds $dpms_inactivity_seconds $dpms_inactivity_seconds

xsetroot -cursor_name left_ptr -solid '#3f3f3f'
xrandr --output HDMI2 --right-of DP1 &
xrdb-reload

# Ensures systemd user units, such as redshift and gnupg-agent have access to
# the display and DBUS information. This could be taken care off by NixOS if
# using a display manager instead of startx:
# https://www.reddit.com/r/NixOS/comments/fmj1ws/problems_with_dbus_settings_in_my_xinitrc/
#
# https://wiki.gentoo.org/wiki/X_without_Display_Manager
eval $(dbus-launch --exit-with-session --sh-syntax)
systemctl --user import-environment DISPLAY XAUTHORITY DBUS_SESSION_BUS_ADDRESS

# Look into DPMS state when blanking the screen to save more power
XSECURELOCK_BLANK_TIMEOUT=5 \
XSECURELOCK_AUTH_FOREGROUND_COLOR=#dcdccc \
XSECURELOCK_AUTH_BACKGROUND_COLOR=#3f3f3f \
XSECURELOCK_BACKGROUND_COLOR=#3f3f3f \
XSECURELOCK_DIM_COLOR=#7f9f7f \
XSECURELOCK_SHOW_HOSTNAME=0 \
XSECURELOCK_SHOW_USERNAME=0 \
XSECURELOCK_DIM_TIME_MS=30000 \
xss-lock -n /run/current-system/sw/libexec/xsecurelock/dimmer -l -- xsecurelock &

home.d-file () {
    local rel_path=$1
    local abs_path=$HOME_D/$rel_path
    local abs_path2=$HOME_D/profile/$rel_path
    if [[ -e $abs_path ]]; then
        echo $abs_path
    elif [[ -e $abs_path2 ]]; then
        echo $abs_path2
    else
        echo Nothing
    fi
}

source-home.d () {
    local rel_path=$1
    local abs_path=$(home.d-file $rel_path)
    if [[ $abs_path != Nothing  ]]; then
        source $abs_path
    fi
}

# https://github.com/xmonad/xmonad/issues/126
export _JAVA_AWT_WM_NONREPARENTING=1

# Moved to home manager
# /run/current-system/sw/bin/polybar --config=$HOME_D/xmonad/polybar.ini --reload top &
# disown
# This will not be needed once xmonad is handled by systemd and starts the graphical-session.target unit.
# From that we can make sure polybar is started before that target.
systemctl --user restart polybar.service

exec /run/current-system/sw/bin/xmonad
